{"version":3,"sources":["index.js"],"names":["btn","document","querySelector","moreContext","homeContext","addEventListener","style","opacity","setTimeout","menuBtn","navMenu","navItems","menuOpen","classList","remove","add","swiper","Swiper","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","loop","pagination","el","clickable","navigation","nextEl","prevEl","autoplay","delay","disableOnInteraction","scrollOptions","behavior","block","sectionIds","sections","map","id","navLinks","selectedNavLink","selectedNavIndex","selectNavItem","selected","event","target","closest","targetSection","textContent","toLowerCase","scrollIntoView","scrollTopBtn","home","scrollUp","header","homeHeight","getBoundingClientRect","height","window","scrollY","options","root","rootMargin","threshold","callback","entries","forEach","entry","isIntersecting","intersectionRatio","index","indexOf","boundingClientRect","y","observer","IntersectionObserver","section","observe","body","innerHeight","length","console","log"],"mappings":"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","file":"myPortfolio.51e116a7.js","sourceRoot":"..","sourcesContent":["'use strict'\n\n// Home Button\nconst btn = document.querySelector('#home .btn');\nconst moreContext = document.querySelector('.home__context-more');\nconst homeContext = document.querySelector('.home__context');\n\nbtn.addEventListener('click', () => {\n  homeContext.style.opacity = 0;\n  moreContext.style.opacity = 1;\n  \n  setTimeout(() => {\n    moreContext.style.opacity = 0;\n    homeContext.style.opacity = 1;\n  }, 5000);\n});\n\n// Hamburger menu click\nconst menuBtn = document.querySelector('.menu__btn');\nconst navMenu = document.querySelector('.nav');\nconst navItems = document.querySelector('.nav__items');\n\nlet menuOpen = false;\n\nmenuBtn.addEventListener('click', () => {\n  if (!menuOpen) {\n    menuBtn.classList.add('open');\n    navMenu.classList.add('open');\n    navItems.classList.add('open');\n    \n    menuOpen = true;\n  } else {\n    menuBtn.classList.remove('open');\n    navMenu.classList.remove('open');\n    navItems.classList.remove('open');\n    \n    menuOpen = false;\n  }\n});\n\n\n\n// Image Swiper \nconst swiper = new Swiper('.swiper-container', {\n  effect: 'coverflow',\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: 'auto',\n  coverflowEffect: {\n    rotate: 25,\n    stretch: 0,\n    depth: 300,\n    modifier: 1,\n    slideShadows: true,\n  },\n  loop: true,\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n  },\n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  },\n  autoplay: {\n    delay: 2000,\n    disableOnInteraction: true,\n  },\n});\n\nconst scrollOptions = {\n  behavior: \"smooth\",\n  block: \"start\"\n}\n\nconst sectionIds = [\n  \"#home\",\n  \"#about\",\n  \"#gallery\",\n  \"#skills\",\n  \"#contact\"\n];\n\nconst sections = sectionIds.map(id => document.querySelector(id));\nconst navLinks = sectionIds.map(id => document.querySelector(`[data-link=\"${id}\"]`));\n\nlet selectedNavLink = navLinks[0];\nlet selectedNavIndex = 0;\n\nselectedNavLink.classList.add('active');\n\nfunction selectNavItem(selected) {\n  selectedNavLink.classList.remove('active');\n  selectedNavLink = selected;\n  selectedNavLink.classList.add('active');\n}\n\nnavItems.addEventListener('click', (event) => {\n  const target = event.target.closest('li');\n  if (!target) {\n    return;\n  } else {\n    const targetSection = target.textContent.toLowerCase();\n    const scrollTo = document.querySelector(`#${targetSection}`);\n    scrollTo.scrollIntoView(scrollOptions);\n    \n    selectNavItem(target);\n    \n    menuBtn.classList.remove('open');\n    navMenu.classList.remove('open');\n    navItems.classList.remove('open');\n    \n    menuOpen = false;\n  }\n});\n\nconst scrollTopBtn = document.querySelector('.scrollBtn');\nconst home = document.querySelector('#home');\nconst scrollUp = document.querySelector('.scrollBtn');\nconst header = document.querySelector('header');\n\nscrollTopBtn.addEventListener('click', () => {\n  home.scrollIntoView(scrollOptions);\n  selectNavItem(navLinks[0]);\n})\n\ndocument.addEventListener('scroll', () => {\n  const homeHeight = home.getBoundingClientRect().height;\n  \n  if (window.scrollY > homeHeight /4) {\n    scrollUp.classList.add('show');\n    header.classList.add('background');\n  } else {\n    scrollUp.classList.remove('show');\n    header.classList.remove('background');\n  }\n  \n})\n\n//  Intersection Oberserver --------------------------\n\nconst options = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0.5\n}\n\nfunction callback (entries) {\n  entries.forEach(entry => {\n    if (!entry.isIntersecting && entry.intersectionRatio > 0) {\n      const index = sectionIds.indexOf(`#${entry.target.id}`);\n     \n      if (entry.boundingClientRect.y < 0) {\n        selectedNavIndex = index + 1;\n      } else {\n        selectedNavIndex = index - 1;\n      }\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(callback, options);\nsections.forEach(section => observer.observe(section));\n\n\nwindow.addEventListener('wheel', () => {\n  if (window.scrollY === 0) {\n    selectedNavIndex = 0;\n  } else if (window.scrollY === document.body.innerHeight) {\n    selectedNavIndex = navLinks.length - 1;\n    console.log(window.scrollY, document.body.innerHeight);\n  }\n  selectNavItem(navLinks[selectedNavIndex]);\n});"]}